:integration: logstash
:plugin: logstash
:type: input
:no_codec:

///////////////////////////////////////////
START - GENERATED VARIABLES, DO NOT EDIT!
///////////////////////////////////////////
:version: v0.0.1
:release_date: 2023-09-25
:changelog_url: https://github.com/logstash-plugins/logstash-integration-logstash/blob/v0.0.1/CHANGELOG.md
:include_path: ../include/6.x
///////////////////////////////////////////
END - GENERATED VARIABLES, DO NOT EDIT!
///////////////////////////////////////////

[id="{version}-plugins-{type}s-{plugin}"]

=== Logstash input plugin {version}

include::{include_path}/plugin_header-integration.asciidoc[]

==== Description

Listen for events that are sent by a {logstash-ref}/plugins-outputs-logstash.html[logstash output plugin] in a pipeline that may be in another process or on another host.
The upstream output must have a TCP route to the port on an interface that this plugin is bound to.

NOTE: Sending events to this input by _any_ means other than {logstash-ref}/plugins-outputs-logstash.html[logstash output plugin] is neither advised nor supported.
      We will maintain cross-compatibility with any two supported versions of output/input pair and reserve the right to change details such as protocol and encoding.

[id="{version}-plugins-{type}s-{plugin}-minimum-config"]
===== Minimum Configuration
[cols="3a,2a"]
|=======================================================================================================================
|SSL Enabled              |SSL Disabled

|

[source,shell]
----
input {
  logstash {
    port => 8080
    ssl_keystore_path
         => "/path/to/logstash.p12"
    ssl_keystore_password
         => "${PASS}"
  }
}
----

|

[source,shell]
----
input {
  logstash {
    port        => 8080
    ssl_enabled => false
  }
}
----

|=======================================================================================================================


[id="{version}-plugins-{type}s-{plugin}-config-binding"]
===== Configuration Concepts

This input plugin needs to be configured to bind to a TCP <<{version}-plugins-{type}s-{plugin}-port>>, and can be constrained to bind to a particular interface by providing the IP to <<{version}-plugins-{type}s-{plugin}-host>>.

[id="{version}-plugins-{type}s-{plugin}-config-ssl-identity"]
===== Security: SSL Identity

Unless SSL is disabled, this plugin needs to be configured with identity material:

* JKS- or PKCS12-formatted Keystore (see <<{version}-plugins-{type}s-{plugin}-ssl_keystore_path>>)
* PKCS8-formatted Certificate/Key pair (see <<{version}-plugins-{type}s-{plugin}-ssl_certificate>>)

[id="{version}-plugins-{type}s-{plugin}-config-ssl-trust"]
===== Security: SSL Trust

When communicating over SSL, this plugin can be configured to either request or require that connecting clients present their own identity claims with <<{version}-plugins-{type}s-{plugin}-ssl_client_authentication>>.

Certificates that are presented by clients are validated by default using the system trust store to ensure that they are currently-valid and trusted, and that the client can prove possession of its associated private key.
You can provide an _alternate_ source of trust with:

* A PEM-formatted list of trusted certificate authorities (see <<{version}-plugins-{type}s-{plugin}-ssl_certificate_authorities>>)

NOTE: Client-certificate verification does _not_ verify identity claims on the presented certificate, such as whether the certificate includes a Subject Alt Name matching the IP address from which the client is connecting.

[id="{version}-plugins-{type}s-{plugin}-config-credentials"]
===== Security: Credentials

You can also configure this plugin to require a specific username/password be provided by configuring <<{version}-plugins-{type}s-{plugin}-username>> and <<{version}-plugins-{type}s-{plugin}-password>>.
Doing so requires connecting {logstash-ref}/plugins-outputs-logstash.html[logstash output plugin] clients to provide matching <<plugins-outputs-{plugin}-username>> and <<plugins-outputs-{plugin}-password>>.

NOTE: when SSL is disabled, data and credentials will be received in clear-text.

[id="{version}-plugins-{type}s-{plugin}-options"]
==== Logstash Input Configuration Options

This plugin supports the following configuration options plus the <<{version}-plugins-{type}s-{plugin}-common-options>> described later.

[cols="<,<,<",options="header",]
|=======================================================================
|Setting                            |Input type        |Required
| <<{version}-plugins-{type}s-{plugin}-host>> |{logstash-ref}/configuration-file-structure.html#string[string] |No
| <<{version}-plugins-{type}s-{plugin}-password>> |{logstash-ref}/configuration-file-structure.html#password[password]|No
| <<{version}-plugins-{type}s-{plugin}-port>> |{logstash-ref}/configuration-file-structure.html#number[number] |Yes
| <<{version}-plugins-{type}s-{plugin}-ssl_certificate>> | {logstash-ref}/configuration-file-structure.html#path[path]|No
| <<{version}-plugins-{type}s-{plugin}-ssl_certificate_authorities>> |{logstash-ref}/configuration-file-structure.html#array[array]|No
| <<{version}-plugins-{type}s-{plugin}-ssl_client_authentication>> | {logstash-ref}/configuration-file-structure.html#string[string], one of `["none", "optional", "required"]`|No
| <<{version}-plugins-{type}s-{plugin}-ssl_enabled>> |{logstash-ref}/configuration-file-structure.html#boolean[boolean]|No
| <<{version}-plugins-{type}s-{plugin}-ssl_key>> | {logstash-ref}/configuration-file-structure.html#path[path]|No
| <<{version}-plugins-{type}s-{plugin}-ssl_keystore_password>> | {logstash-ref}/configuration-file-structure.html#password[password]|No
| <<{version}-plugins-{type}s-{plugin}-ssl_keystore_path>> | {logstash-ref}/configuration-file-structure.html#path[path]|No
| <<{version}-plugins-{type}s-{plugin}-ssl_key_passphrase>> | {logstash-ref}/configuration-file-structure.html#password[password]|No
| <<{version}-plugins-{type}s-{plugin}-username>> |{logstash-ref}/configuration-file-structure.html#string[string]|No
|=======================================================================

Also see <<{version}-plugins-{type}s-{plugin}-common-options>> for a list of options supported by all
input plugins.

&nbsp;

[id="{version}-plugins-{type}s-{plugin}-host"]
===== `host`

* Value type is a {logstash-ref}/configuration-file-structure.html#string[string] ip address
* Default value is `0.0.0.0` (all interfaces)

Specify which interface to listen on by providing its ip address.
By default, this input listens on all available interfaces.

[id="{version}-plugins-{type}s-{plugin}-password"]
===== `password`

* Value type is {logstash-ref}/configuration-file-structure.html#password[password]
* There is no default value for this setting.

Password for password-based authentication.
Requires <<{version}-plugins-{type}s-{plugin}-username>>.

[id="{version}-plugins-{type}s-{plugin}-port"]
===== `port`

* Value type is a {logstash-ref}/configuration-file-structure.html#number[number] port
* There is no default value

Specify which port to listen on.

[id="{version}-plugins-{type}s-{plugin}-ssl_certificate"]
===== `ssl_certificate`

* Value type is {logstash-ref}/configuration-file-structure.html#path[path]
* There is no default value for this setting.
* When present, <<{version}-plugins-{type}s-{plugin}-ssl_key>> and <<{version}-plugins-{type}s-{plugin}-ssl_key_passphrase>> are also required.
* Cannot be combined with configurations that disable SSL.

Path to a PEM-encoded certificate or certificate chain with which to identify this plugin to connecting clients.
The certificate _SHOULD_ include identity claims about the ip address or hostname that clients use to establish a connection.

[id="{version}-plugins-{type}s-{plugin}-ssl_certificate_authorities"]
===== `ssl_certificate_authorities`

* Value type is a list of {logstash-ref}/configuration-file-structure.html#path[path]s
* There is no default value for this setting.
* Cannot be combined with configurations that disable SSL.
* Cannot be combined with <<{version}-plugins-{type}s-{plugin}-ssl_client_authentication, `+ssl_client_authentication => none+`>>.

One or more PEM-encoded files defining certificate authorities for use in client authentication.
This setting can be used to _override_ the system trust store for verifying the SSL certificate presented by clients.

[id="{version}-plugins-{type}s-{plugin}-ssl_client_authentication"]
===== `ssl_client_authentication`

* Value can be any of:
** `none`: do not request client's certificate, or validate certificates that are presented
** `optional`: request client's certificate, and validate it against our trust authorities _if-and-only-if_ it is presented
** `required`: require a valid certificate from the client that is signed by a trusted certificate authority
* Default value is `"none"`

By default the server doesn't do any client authentication.
This means that connections from clients are _private_ when SSL is enabled, but that this input will allow SSL connections from _any_ client.
If you wish to configure this plugin to reject connections from untrusted hosts, you will need to configure this plugin to authenticate clients, and may also need to configure its <<{version}-plugins-{type}s-{plugin}-config-ssl-trust, source of trust>>.

[id="{version}-plugins-{type}s-{plugin}-ssl_enabled"]
===== `ssl_enabled`

* Value type is {logstash-ref}/configuration-file-structure.html#boolean[boolean]
* Default value is `true`

SSL is enabled by default, which requires configuring this plugin to present its <<{version}-plugins-{type}s-{plugin}-config-ssl-identity, identity>>.

You can disable SSL with `+ssl_enabled => false+`. When disabled, setting any `ssl_*` configuration causes configuration failure.

[id="{version}-plugins-{type}s-{plugin}-ssl_key"]
===== `ssl_key`

* Value type is {logstash-ref}/configuration-file-structure.html#path[path]
* There is no default value for this setting.
* Required when connection identity is configured with <<{version}-plugins-{type}s-{plugin}-ssl_certificate>>.
* Cannot be combined with configurations that disable SSL.

A path to a PEM-encoded _encrypted_ PKCS8 SSL certificate key.

[id="{version}-plugins-{type}s-{plugin}-ssl_keystore_password"]
===== `ssl_keystore_password`

* Value type is {logstash-ref}/configuration-file-structure.html#password[password]
* There is no default value for this setting.
* Required when connection identity is configured with <<{version}-plugins-{type}s-{plugin}-ssl_keystore_path>>.
* Cannot be combined with configurations that disable SSL.

Password for the <<{version}-plugins-{type}s-{plugin}-ssl_keystore_path>>

[id="{version}-plugins-{type}s-{plugin}-ssl_keystore_path"]
===== `ssl_keystore_path`

* Value type is {logstash-ref}/configuration-file-structure.html#path[path]
* There is no default value for this setting.
* When present, <<{version}-plugins-{type}s-{plugin}-ssl_keystore_password>> is also required.
* Cannot be combined with configurations that disable SSL.

A path to a JKS- or PKCS12-formatted keystore with which to identify this plugin to {es}.

[id="{version}-plugins-{type}s-{plugin}-ssl_key_passphrase"]
===== `ssl_key_passphrase`

* Value type is {logstash-ref}/configuration-file-structure.html#password[password]
* There is no default value for this setting.
* Required when connection identity is configured with <<{version}-plugins-{type}s-{plugin}-ssl_certificate>>.
* Cannot be combined with configurations that disable SSL.

A password or passphrase of the <<{version}-plugins-{type}s-{plugin}-ssl_key>>.

[id="{version}-plugins-{type}s-{plugin}-username"]
===== `username`

* Value type is {logstash-ref}/configuration-file-structure.html#string[string]
* There is no default value for this setting.

Username for password-based authentication.
When this input plugin is configured with a `username`, it also requires a <<{version}-plugins-{type}s-{plugin}-password>>, and any upstream {logstash-ref}/plugins-outputs-logstash.html[logstash output plugin] must also be configured with a matching `username`/`password` pair.

NOTE: when SSL is disabled, credentials will be transmitted in clear-text.

[id="{version}-plugins-{type}s-{plugin}-common-options"]
include::{include_path}/{type}.asciidoc[]

:default_codec!:
