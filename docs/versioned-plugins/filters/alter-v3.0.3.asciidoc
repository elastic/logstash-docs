:plugin: alter
:type: filter

///////////////////////////////////////////
START - GENERATED VARIABLES, DO NOT EDIT!
///////////////////////////////////////////
:version: v3.0.3
:release_date: 2017-11-07
:changelog_url: https://github.com/logstash-plugins/logstash-filter-alter/blob/v3.0.3/CHANGELOG.md
:include_path: ../../../../logstash/docs/include
///////////////////////////////////////////
END - GENERATED VARIABLES, DO NOT EDIT!
///////////////////////////////////////////

[id="{version}-plugins-{type}s-{plugin}"]

=== Alter filter plugin {version}

include::{include_path}/plugin_header.asciidoc[]

==== Description

The alter filter allows you to do general alterations to fields 
that are not included in the normal mutate filter. 


NOTE: The functionality provided by this plugin is likely to
be merged into the 'mutate' filter in future versions.

[id="{version}-plugins-{type}s-{plugin}-options"]
==== Alter Filter Configuration Options

This plugin supports the following configuration options plus the <<{version}-plugins-{type}s-{plugin}-common-options>> described later.

[cols="<,<,<",options="header",]
|=======================================================================
|Setting |Input type|Required
| <<{version}-plugins-{type}s-{plugin}-coalesce>> |{logstash-ref}/configuration-file-structure.html#array[array]|No
| <<{version}-plugins-{type}s-{plugin}-condrewrite>> |{logstash-ref}/configuration-file-structure.html#array[array]|No
| <<{version}-plugins-{type}s-{plugin}-condrewriteother>> |{logstash-ref}/configuration-file-structure.html#array[array]|No
|=======================================================================

Also see <<{version}-plugins-{type}s-{plugin}-common-options>> for a list of options supported by all
filter plugins.

&nbsp;

[id="{version}-plugins-{type}s-{plugin}-coalesce"]
===== `coalesce` 

  * Value type is {logstash-ref}/configuration-file-structure.html#array[array]
  * There is no default value for this setting.

Sets the value of field_name to the first nonnull expression among its arguments.

Example:
[source,ruby]
    filter {
      alter {
        coalesce => [
             "field_name", "value1", "value2", "value3", ...
        ]
      }
    }

[id="{version}-plugins-{type}s-{plugin}-condrewrite"]
===== `condrewrite` 

  * Value type is {logstash-ref}/configuration-file-structure.html#array[array]
  * There is no default value for this setting.

Change the content of the field to the specified value
if the actual content is equal to the expected one.

Example:
[source,ruby]
    filter {
      alter {
        condrewrite => [ 
             "field_name", "expected_value", "new_value",
             "field_name2", "expected_value2", "new_value2",
             ....
           ]
      }
    }

[id="{version}-plugins-{type}s-{plugin}-condrewriteother"]
===== `condrewriteother` 

  * Value type is {logstash-ref}/configuration-file-structure.html#array[array]
  * There is no default value for this setting.

Change the content of the field to the specified value
if the content of another field is equal to the expected one.

Example:
[source,ruby]
    filter {
      alter {
        condrewriteother => [ 
             "field_name", "expected_value", "field_name_to_change", "value",
             "field_name2", "expected_value2", "field_name_to_change2", "value2",
             ....
        ]
      }
    }



[id="{version}-plugins-{type}s-{plugin}-common-options"]
include::{include_path}/{type}.asciidoc[]