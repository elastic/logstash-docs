:plugin: nmap
:type: codec

///////////////////////////////////////////
START - GENERATED VARIABLES, DO NOT EDIT!
///////////////////////////////////////////
:version: v0.0.21
:release_date: 2017-11-07
:changelog_url: https://github.com/logstash-plugins/logstash-codec-nmap/blob/v0.0.21/CHANGELOG.md
:include_path: ../../../../logstash/docs/include
///////////////////////////////////////////
END - GENERATED VARIABLES, DO NOT EDIT!
///////////////////////////////////////////

[id="{version}-plugins-{type}s-{plugin}"]

=== Nmap codec plugin {version}

include::{include_path}/plugin_header.asciidoc[]

==== Description

This codec is used to parse https://nmap.org/[namp] output data which is serialized in XML format. Nmap ("Network Mapper") is a free and open source utility for network discovery and security auditing. 
For more information on nmap, see https://nmap.org/.

This codec can only be used for decoding data.

Event types are listed below

`nmap_scan_metadata`: An object containing top level information about the scan, including how many hosts were up, and how many were down. Useful for the case where you need to check if a DNS based hostname does not resolve, where both those numbers will be zero.
`nmap_host`: One event is created per host. The full data covering an individual host, including open ports and traceroute information as a nested structure.
`nmap_port`: One event is created per host/port. This duplicates data already in `nmap_host`: This was put in for the case where you want to model ports as separate documents in Elasticsearch (which Kibana prefers).
`nmap_traceroute_link`: One of these is output per traceroute 'connection', with a `from` and a `to` object describing each hop. Note that traceroute hop data is not always correct due to the fact that each tracing ICMP packet may take a different route. Also very useful for Kibana visualizations.

[id="{version}-plugins-{type}s-{plugin}-options"]
==== Nmap Codec Configuration Options

[cols="<,<,<",options="header",]
|=======================================================================
|Setting |Input type|Required
| <<{version}-plugins-{type}s-{plugin}-emit_hosts>> |{logstash-ref}/configuration-file-structure.html#boolean[boolean]|No
| <<{version}-plugins-{type}s-{plugin}-emit_ports>> |{logstash-ref}/configuration-file-structure.html#boolean[boolean]|No
| <<{version}-plugins-{type}s-{plugin}-emit_scan_metadata>> |{logstash-ref}/configuration-file-structure.html#boolean[boolean]|No
| <<{version}-plugins-{type}s-{plugin}-emit_traceroute_links>> |{logstash-ref}/configuration-file-structure.html#boolean[boolean]|No
|=======================================================================

&nbsp;

[id="{version}-plugins-{type}s-{plugin}-emit_hosts"]
===== `emit_hosts` 

  * Value type is {logstash-ref}/configuration-file-structure.html#boolean[boolean]
  * Default value is `true`

Emit all host data as a nested document (including ports + traceroutes) with the type 'nmap_fullscan'

[id="{version}-plugins-{type}s-{plugin}-emit_ports"]
===== `emit_ports` 

  * Value type is {logstash-ref}/configuration-file-structure.html#boolean[boolean]
  * Default value is `true`

Emit each port as a separate document with type 'nmap_port'

[id="{version}-plugins-{type}s-{plugin}-emit_scan_metadata"]
===== `emit_scan_metadata` 

  * Value type is {logstash-ref}/configuration-file-structure.html#boolean[boolean]
  * Default value is `true`

Emit scan metadata

[id="{version}-plugins-{type}s-{plugin}-emit_traceroute_links"]
===== `emit_traceroute_links` 

  * Value type is {logstash-ref}/configuration-file-structure.html#boolean[boolean]
  * Default value is `true`

Emit each hop_tuple of the traceroute with type 'nmap_traceroute_link'


