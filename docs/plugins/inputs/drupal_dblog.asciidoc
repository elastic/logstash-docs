[[plugins-inputs-drupal_dblog]]
=== drupal_dblog

Retrieve watchdog log events from a Drupal installation with DBLog enabled.
The events are pulled out directly from the database.
The original events are not deleted, and on every consecutive run only new
events are pulled.

The last watchdog event id that was processed is stored in the Drupal
variable table with the name "logstash_last_wid". Delete this variable or
set it to 0 if you want to re-import all events.

More info on DBLog: http://drupal.org/documentation/modules/dblog


&nbsp;

==== Synopsis

This plugin supports the following configuration options:


Required configuration options:

[source,json]
--------------------------
drupal_dblog {
}
--------------------------



Available configuration options:

[cols="<,<,<,<m",options="header",]
|=======================================================================
|Setting |Input type|Required|Default value
| <<plugins-inputs-drupal_dblog-add_field>> |<<hash,hash>>|No|`{}`
| <<plugins-inputs-drupal_dblog-add_usernames>> |<<boolean,boolean>>|No|`false`
| <<plugins-inputs-drupal_dblog-bulksize>> |<<number,number>>|No|`5000`
| <<plugins-inputs-drupal_dblog-codec>> |<<codec,codec>>|No|`"plain"`
| <<plugins-inputs-drupal_dblog-databases>> |<<hash,hash>>|No|
| <<plugins-inputs-drupal_dblog-interval>> |<<number,number>>|No|`10`
| <<plugins-inputs-drupal_dblog-tags>> |<<array,array>>|No|
| <<plugins-inputs-drupal_dblog-type>> |<<string,string>>|No|`"watchdog"`
|=======================================================================


==== Details

&nbsp;

[[plugins-inputs-drupal_dblog-add_field]]
===== `add_field` 

  * Value type is <<hash,hash>>
  * Default value is `{}`

Add a field to an event

[[plugins-inputs-drupal_dblog-add_usernames]]
===== `add_usernames` 

  * Value type is <<boolean,boolean>>
  * Default value is `false`

By default, the event only contains the current user id as a field.
If you whish to add the username as an additional field, set this to true.

[[plugins-inputs-drupal_dblog-bulksize]]
===== `bulksize` 

  * Value type is <<number,number>>
  * Default value is `5000`

The amount of log messages that should be fetched with each query.
Bulk fetching is done to prevent querying huge data sets when lots of
messages are in the database.

[[plugins-inputs-drupal_dblog-charset]]
===== `charset`  (DEPRECATED)

  * DEPRECATED WARNING: This configuration item is deprecated and may not be available in future versions.
  * Value can be any of: `ASCII-8BIT`, `Big5`, `Big5-HKSCS`, `Big5-UAO`, `CP949`, `Emacs-Mule`, `EUC-JP`, `EUC-KR`, `EUC-TW`, `GB18030`, `GBK`, `ISO-8859-1`, `ISO-8859-2`, `ISO-8859-3`, `ISO-8859-4`, `ISO-8859-5`, `ISO-8859-6`, `ISO-8859-7`, `ISO-8859-8`, `ISO-8859-9`, `ISO-8859-10`, `ISO-8859-11`, `ISO-8859-13`, `ISO-8859-14`, `ISO-8859-15`, `ISO-8859-16`, `KOI8-R`, `KOI8-U`, `Shift_JIS`, `US-ASCII`, `UTF-8`, `UTF-16BE`, `UTF-16LE`, `UTF-32BE`, `UTF-32LE`, `Windows-1251`, `GB2312`, `IBM437`, `IBM737`, `IBM775`, `CP850`, `IBM852`, `CP852`, `IBM855`, `CP855`, `IBM857`, `IBM860`, `IBM861`, `IBM862`, `IBM863`, `IBM864`, `IBM865`, `IBM866`, `IBM869`, `Windows-1258`, `GB1988`, `macCentEuro`, `macCroatian`, `macCyrillic`, `macGreek`, `macIceland`, `macRoman`, `macRomania`, `macThai`, `macTurkish`, `macUkraine`, `CP950`, `CP951`, `stateless-ISO-2022-JP`, `eucJP-ms`, `CP51932`, `GB12345`, `ISO-2022-JP`, `ISO-2022-JP-2`, `CP50220`, `CP50221`, `Windows-1252`, `Windows-1250`, `Windows-1256`, `Windows-1253`, `Windows-1255`, `Windows-1254`, `TIS-620`, `Windows-874`, `Windows-1257`, `Windows-31J`, `MacJapanese`, `UTF-7`, `UTF8-MAC`, `UTF-16`, `UTF-32`, `UTF8-DoCoMo`, `SJIS-DoCoMo`, `UTF8-KDDI`, `SJIS-KDDI`, `ISO-2022-JP-KDDI`, `stateless-ISO-2022-JP-KDDI`, `UTF8-SoftBank`, `SJIS-SoftBank`, `BINARY`, `CP437`, `CP737`, `CP775`, `IBM850`, `CP857`, `CP860`, `CP861`, `CP862`, `CP863`, `CP864`, `CP865`, `CP866`, `CP869`, `CP1258`, `Big5-HKSCS:2008`, `eucJP`, `euc-jp-ms`, `eucKR`, `eucTW`, `EUC-CN`, `eucCN`, `CP936`, `ISO2022-JP`, `ISO2022-JP2`, `ISO8859-1`, `CP1252`, `ISO8859-2`, `CP1250`, `ISO8859-3`, `ISO8859-4`, `ISO8859-5`, `ISO8859-6`, `CP1256`, `ISO8859-7`, `CP1253`, `ISO8859-8`, `CP1255`, `ISO8859-9`, `CP1254`, `ISO8859-10`, `ISO8859-11`, `CP874`, `ISO8859-13`, `CP1257`, `ISO8859-14`, `ISO8859-15`, `ISO8859-16`, `CP878`, `CP932`, `csWindows31J`, `SJIS`, `PCK`, `MacJapan`, `ASCII`, `ANSI_X3.4-1968`, `646`, `CP65000`, `CP65001`, `UTF-8-MAC`, `UTF-8-HFS`, `UCS-2BE`, `UCS-4BE`, `UCS-4LE`, `CP1251`, `external`, `locale`
  * There is no default value for this setting.

The character encoding used in this input. Examples include `UTF-8`
and `cp1252`

This setting is useful if your log files are in `Latin-1` (aka `cp1252`)
or in another character set other than `UTF-8`.

This only affects `plain` format logs since json is `UTF-8` already.

[[plugins-inputs-drupal_dblog-codec]]
===== `codec` 

  * Value type is <<codec,codec>>
  * Default value is `"plain"`

The codec used for input data. Input codecs are a convenient method for decoding your data before it enters the input, without needing a separate filter in your Logstash pipeline.

[[plugins-inputs-drupal_dblog-databases]]
===== `databases` 

  * Value type is <<hash,hash>>
  * There is no default value for this setting.

Specify all drupal databases that you whish to import from.
This can be as many as you whish.
The format is a hash, with a unique site name as the key, and a databse
url as the value.

Example:
[
  "site1", "mysql://user1:password@host1.com/databasename",
  "other_site", "mysql://user2:password@otherhost.com/databasename",
  ...
]

[[plugins-inputs-drupal_dblog-debug]]
===== `debug`  (DEPRECATED)

  * DEPRECATED WARNING: This configuration item is deprecated and may not be available in future versions.
  * Value type is <<boolean,boolean>>
  * Default value is `false`



[[plugins-inputs-drupal_dblog-format]]
===== `format`  (DEPRECATED)

  * DEPRECATED WARNING: This configuration item is deprecated and may not be available in future versions.
  * Value can be any of: `plain`, `json`, `json_event`, `msgpack_event`
  * There is no default value for this setting.

The format of input data (plain, json, json_event)

[[plugins-inputs-drupal_dblog-interval]]
===== `interval` 

  * Value type is <<number,number>>
  * Default value is `10`

Time between checks in minutes.

[[plugins-inputs-drupal_dblog-message_format]]
===== `message_format`  (DEPRECATED)

  * DEPRECATED WARNING: This configuration item is deprecated and may not be available in future versions.
  * Value type is <<string,string>>
  * There is no default value for this setting.

If format is `json`, an event `sprintf` string to build what
the display `@message` should be given (defaults to the raw JSON).
`sprintf` format strings look like `%{fieldname}`

If format is `json_event`, ALL fields except for `@type`
are expected to be present. Not receiving all fields
will cause unexpected results.

[[plugins-inputs-drupal_dblog-tags]]
===== `tags` 

  * Value type is <<array,array>>
  * There is no default value for this setting.

Add any number of arbitrary tags to your event.

This can help with processing later.

[[plugins-inputs-drupal_dblog-type]]
===== `type` 

  * Value type is <<string,string>>
  * Default value is `"watchdog"`

Label this input with a type.
Types are used mainly for filter activation.


If you create an input with type "foobar", then only filters
which also have type "foobar" will act on them.

The type is also stored as part of the event itself, so you
can also use the type to search for in the web interface.

