:plugin: hashid
:type: filter

///////////////////////////////////////////
START - GENERATED VARIABLES, DO NOT EDIT!
///////////////////////////////////////////
:version: %VERSION%
:release_date: %RELEASE_DATE%
:changelog_url: %CHANGELOG_URL%
:include_path: ../../../../logstash/docs/include
///////////////////////////////////////////
END - GENERATED VARIABLES, DO NOT EDIT!
///////////////////////////////////////////

[id="plugins-{type}s-{plugin}"]

=== Hashid filter plugin

include::{include_path}/plugin_header.asciidoc[]

==== Description

This filter allow you to generate predictable, string encoded hashed keys 
based om event contents and timestamp. This can be used to avoid getting 
duplicate records indexed into Elasticsearch.

Hashed keys to be generated based on full or partial hashes and
has the ability to prefix these keys based on the event timestamp in order
to make then largely ordered by timestamp, which tend to lead to increased
indexing performance for event based use cases where data is being indexed
in near real time.

When used with the timestamp prefix enabled, it should ideally be run after 
the date filter has run and populated the @timestamp field.

[id="plugins-{type}s-{plugin}-options"]
==== Hashid Filter Configuration Options

This plugin supports the following configuration options plus the <<plugins-{type}s-{plugin}-common-options>> described later.

[cols="<,<,<",options="header",]
|=======================================================================
|Setting |Input type|Required
| <<plugins-{type}s-{plugin}-add_timestamp_prefix>> |<<boolean,boolean>>|No
| <<plugins-{type}s-{plugin}-hash_bytes_used>> |<<number,number>>|No
| <<plugins-{type}s-{plugin}-key>> |<<string,string>>|No
| <<plugins-{type}s-{plugin}-method>> |<<string,string>>, one of `["SHA1", "SHA256", "SHA384", "SHA512", "MD5"]`|No
| <<plugins-{type}s-{plugin}-source>> |<<array,array>>|No
| <<plugins-{type}s-{plugin}-target>> |<<string,string>>|No
|=======================================================================

Also see <<plugins-{type}s-{plugin}-common-options>> for a list of options supported by all
filter plugins.

&nbsp;

[id="plugins-{type}s-{plugin}-add_timestamp_prefix"]
===== `add_timestamp_prefix` 

  * Value type is <<boolean,boolean>>
  * Default value is `true`

Use the timestamp to generate an ID prefix

[id="plugins-{type}s-{plugin}-hash_bytes_used"]
===== `hash_bytes_used` 

  * Value type is <<number,number>>
  * There is no default value for this setting.

If full hash generated is not to be used, this parameter specifies how many bytes that should be used
If not specified, the full hash will be used

[id="plugins-{type}s-{plugin}-key"]
===== `key` 

  * Value type is <<string,string>>
  * Default value is `"hashid"`

Encryption key to be used when generating cryptographic hashes

[id="plugins-{type}s-{plugin}-method"]
===== `method` 

  * Value can be any of: `SHA1`, `SHA256`, `SHA384`, `SHA512`, `MD5`
  * Default value is `"MD5"`

Hash function to use

[id="plugins-{type}s-{plugin}-source"]
===== `source` 

  * Value type is <<array,array>>
  * Default value is `["message"]`

Source field(s) to base the hash calculation on

[id="plugins-{type}s-{plugin}-target"]
===== `target` 

  * Value type is <<string,string>>
  * Default value is `"hashid"`

Target field.
Will overwrite current value of a field if it exists.



[id="plugins-{type}s-{plugin}-common-options"]
include::{include_path}/{type}.asciidoc[]