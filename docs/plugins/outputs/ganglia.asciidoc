:plugin: ganglia
:type: output

///////////////////////////////////////////
START - GENERATED VARIABLES, DO NOT EDIT!
///////////////////////////////////////////
:version: %VERSION%
:release_date: %RELEASE_DATE%
:changelog_url: %CHANGELOG_URL%
:include_path: ../../../../logstash/docs/include
///////////////////////////////////////////
END - GENERATED VARIABLES, DO NOT EDIT!
///////////////////////////////////////////

[id="plugins-{type}s-{plugin}"]

=== Ganglia output plugin

include::{include_path}/plugin_header.asciidoc[]

==== Description

This output allows you to pull metrics from your logs and ship them to
ganglia's gmond. This is heavily based on the graphite output.

[id="plugins-{type}s-{plugin}-options"]
==== Ganglia Output Configuration Options

This plugin supports the following configuration options plus the <<plugins-{type}s-{plugin}-common-options>> described later.

[cols="<,<,<",options="header",]
|=======================================================================
|Setting |Input type|Required
| <<plugins-{type}s-{plugin}-group>> |<<string,string>>|No
| <<plugins-{type}s-{plugin}-host>> |<<string,string>>|No
| <<plugins-{type}s-{plugin}-lifetime>> |<<number,number>>|No
| <<plugins-{type}s-{plugin}-max_interval>> |<<number,number>>|No
| <<plugins-{type}s-{plugin}-metric>> |<<string,string>>|Yes
| <<plugins-{type}s-{plugin}-metric_type>> |<<string,string>>, one of `["string", "int8", "uint8", "int16", "uint16", "int32", "uint32", "float", "double"]`|No
| <<plugins-{type}s-{plugin}-port>> |<<number,number>>|No
| <<plugins-{type}s-{plugin}-slope>> |<<string,string>>, one of `["zero", "positive", "negative", "both", "unspecified"]`|No
| <<plugins-{type}s-{plugin}-units>> |<<string,string>>|No
| <<plugins-{type}s-{plugin}-value>> |<<string,string>>|Yes
|=======================================================================

Also see <<plugins-{type}s-{plugin}-common-options>> for a list of options supported by all
output plugins.

&nbsp;

[id="plugins-{type}s-{plugin}-group"]
===== `group` 

  * Value type is <<string,string>>
  * Default value is `""`

Metric group

[id="plugins-{type}s-{plugin}-host"]
===== `host` 

  * Value type is <<string,string>>
  * Default value is `"localhost"`

The address of the ganglia server.

[id="plugins-{type}s-{plugin}-lifetime"]
===== `lifetime` 

  * Value type is <<number,number>>
  * Default value is `300`

Lifetime in seconds of this metric

[id="plugins-{type}s-{plugin}-max_interval"]
===== `max_interval` 

  * Value type is <<number,number>>
  * Default value is `60`

Maximum time in seconds between gmetric calls for this metric.

[id="plugins-{type}s-{plugin}-metric"]
===== `metric` 

  * This is a required setting.
  * Value type is <<string,string>>
  * There is no default value for this setting.

The metric to use. This supports dynamic strings like `%{host}`

[id="plugins-{type}s-{plugin}-metric_type"]
===== `metric_type` 

  * Value can be any of: `string`, `int8`, `uint8`, `int16`, `uint16`, `int32`, `uint32`, `float`, `double`
  * Default value is `"uint8"`

The type of value for this metric.

[id="plugins-{type}s-{plugin}-port"]
===== `port` 

  * Value type is <<number,number>>
  * Default value is `8649`

The port to connect on your ganglia server.

[id="plugins-{type}s-{plugin}-slope"]
===== `slope` 

  * Value can be any of: `zero`, `positive`, `negative`, `both`, `unspecified`
  * Default value is `"both"`

Metric slope, represents metric behavior

[id="plugins-{type}s-{plugin}-units"]
===== `units` 

  * Value type is <<string,string>>
  * Default value is `""`

Gmetric units for metric, such as "kb/sec" or "ms" or whatever unit
this metric uses.

[id="plugins-{type}s-{plugin}-value"]
===== `value` 

  * This is a required setting.
  * Value type is <<string,string>>
  * There is no default value for this setting.

The value to use. This supports dynamic strings like `%{bytes}`
It will be coerced to a floating point value. Values which cannot be
coerced will zero (0)



[id="plugins-{type}s-{plugin}-common-options"]
include::{include_path}/{type}.asciidoc[]