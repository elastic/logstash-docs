:integration: elastic_enterprise_search
:plugin: elastic_app_search
:type: output
:default_plugin: 1
:no_codec:

///////////////////////////////////////////
START - GENERATED VARIABLES, DO NOT EDIT!
///////////////////////////////////////////
:version: v2.2.0
:release_date: 2022-01-24
:changelog_url: https://github.com/logstash-plugins/logstash-integration-elastic_enterprise_search/blob/v2.2.0/CHANGELOG.md
:include_path: ../../../../logstash/docs/include
///////////////////////////////////////////
END - GENERATED VARIABLES, DO NOT EDIT!
///////////////////////////////////////////

[id="plugins-{type}s-{plugin}"]

=== Elastic App Search output plugin

include::{include_path}/plugin_header-integration.asciidoc[]

==== Description

This output lets you send events to the https://www.elastic.co/app-search[Elastic App Search] solution,
both the https://www.elastic.co/downloads/app-search[self-managed] or
the https://www.elastic.co/cloud/app-search-service[managed] service.
On receiving a batch of events from the Logstash pipeline, the plugin
converts the events into documents and uses the App Search bulk API
to index multiple events in one request.

App Search doesn't allow fields to begin with `@timestamp`.
By default the `@timestamp` and `@version` fields will be removed from
each event before the event is sent to App Search. If you want to keep
the `@timestamp` field, you can use the
<<plugins-{type}s-{plugin}-timestamp_destination,timestamp_destination>> option
to store the timestamp in a different field.

NOTE: This gem does not support codec customization.

[id="plugins-{type}s-{plugin}-options"]
==== AppSearch Output configuration options

This plugin supports the following configuration options plus the
<<plugins-{type}s-{plugin}-common-options>> described later.

[cols="<,<,<",options="header",]
|=======================================================================
|Setting |Input type|Required
| <<plugins-{type}s-{plugin}-api_key>> |<<password,password>>|Yes
| <<plugins-{type}s-{plugin}-document_id>> |<<string,string>>|No
| <<plugins-{type}s-{plugin}-engine>> |<<string,string>>|Yes
| <<plugins-{type}s-{plugin}-host>> |<<string,string>>|No
| <<plugins-{type}s-{plugin}-path>> |<<string,string>>|No
| <<plugins-{type}s-{plugin}-timestamp_destination>> |<<string,string>>|No
| <<plugins-{type}s-{plugin}-url>> |<<string,string>>|No
|=======================================================================

Also see <<plugins-{type}s-{plugin}-common-options>> for a list of options supported by all
output plugins.

&nbsp;

[id="plugins-{type}s-{plugin}-api_key"]
===== `api_key`

* Value type is <<password,password>>
* There is no default value

The private API Key with write permissions. Visit the https://app.swiftype.com/as/credentials[Credentials] in the App Search dashboard to find the key associated with your account.

[id="plugins-{type}s-{plugin}-document_id"]
===== `document_id`

* Value type is <<string,string>>
* There is no default value

The id for app search documents. This can be an interpolated value
like `myapp-%{sequence_id}`. Reusing ids will cause documents to be rewritten.

[id="plugins-{type}s-{plugin}-engine"]
===== `engine`

* Value type is <<string,string>>
* There is no default value

The name of the search engine you created in App Search, an information
repository that includes the indexed document records.
The `engine` field supports
{logstash-ref}/event-dependent-configuration.html#sprintf[sprintf format] to
allow the engine name to be derived from a field value from each event, for
example `engine-%{engine_name}`.

Invalid engine names cause ingestion to stop until the field value can be resolved into a valid engine name.
This situation can happen if the interpolated field value resolves to a value without a matching engine,
or, if the field is missing from the event and cannot be resolved at all.

TIP: Consider adding a "default" engine type in the configuration to catch errors if
the field is missing from the event.

Example:



[source,ruby]
----------------------------------
input {
  stdin {
    codec => json
  }
}

filter {
  if ![engine_name] {
    mutate {
      add_field => {"engine_name" => "default"}
    }
  }
}

output {
  elastic_app_search {
    engine => "engine_%{[engine_name]}"
  }
}
----------------------------------

[id="plugins-{type}s-{plugin}-host"]
===== `host`

* Value type is <<string,string>>
* There is no default value

The hostname of the App Search SaaS API that is associated with your App Search account.
This is used only by Swiftype App Search, and has the form of `host-1ab2cd`.
Set this when using the https://swiftype.com/documentation/app-search/getting-started [Swiftype App Search managed service].

NOTE: This is valid only for Swiftype SaaS AppSearch accounts, could be removed in future versions.

[source,ruby]
----------------------------------
output {
  elastic_app_search {
    api_key => "private-somethingsecrethere"
    host => "host-1ab2cd"
  }
}
----------------------------------

[id="plugins-{type}s-{plugin}-path"]
===== `path`

* Value type is <<string,string>>
* Default value is `/api/as/v1/`


The `path` setting is used only for Swiftype SaaS AppSearch and could be removed in future versions.
If configured, it needs the `host` which refers to a Swiftype's AppSearch instance.

Note: When connecting to a https://www.elastic.co/downloads/app-search[self-managed Elastic App Search] the path is appended to the `url` parameter.

[source,ruby]
----------------------------------
output {
  elastic_app_search {
    api_key => "private-somethingsecrethere"
    url => "https://localhost:3002"
    path => "/api"
  }
}
----------------------------------

[id="plugins-{type}s-{plugin}-timestamp_destination"]
===== `timestamp_destination`

* Value type is <<string,string>>
* There is no default value

Where to move the value from the `@timestamp` field.

All Logstash events contain a `@timestamp` field.
App Search doesn't support fields starting with `@timestamp`, and
by default, the `@timestamp` field will be deleted.

To keep the timestamp field, set this value to the name of the field where you want `@timestamp` copied.

[id="plugins-{type}s-{plugin}-url"]
===== `url`

* Value type is <<string,string>>
* There is no default value

The value of the API endpoint in the form of a URL. Note: The value of the of the `path` setting will be will be appended to this URL.
Set this when using the https://www.elastic.co/downloads/app-search[self-managed Elastic App Search].

[id="plugins-{type}s-{plugin}-common-options"]
include::{include_path}/{type}.asciidoc[]

:no_codec!:
