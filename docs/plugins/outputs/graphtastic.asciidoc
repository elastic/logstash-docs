:plugin: graphtastic
:type: output

///////////////////////////////////////////
START - GENERATED VARIABLES, DO NOT EDIT!
///////////////////////////////////////////
:version: %VERSION%
:release_date: %RELEASE_DATE%
:changelog_url: %CHANGELOG_URL%
:include_path: ../../../../logstash/docs/include
///////////////////////////////////////////
END - GENERATED VARIABLES, DO NOT EDIT!
///////////////////////////////////////////

[id="plugins-{type}s-{plugin}"]

=== Graphtastic output plugin

include::{include_path}/plugin_header.asciidoc[]

==== Description

A plugin for a newly developed Java/Spring Metrics application
I didn't really want to code this project but I couldn't find
a respectable alternative that would also run on any Windows
machine - which is the problem and why I am not going with Graphite
and statsd.  This application provides multiple integration options
so as to make its use under your network requirements possible.
This includes a REST option that is always enabled for your use
in case you want to write a small script to send the occasional
metric data.

Find GraphTastic here : https://github.com/NickPadilla/GraphTastic

[id="plugins-{type}s-{plugin}-options"]
==== Graphtastic Output Configuration Options

This plugin supports the following configuration options plus the <<plugins-{type}s-{plugin}-common-options>> described later.

[cols="<,<,<",options="header",]
|=======================================================================
|Setting |Input type|Required
| <<plugins-{type}s-{plugin}-batch_number>> |<<number,number>>|No
| <<plugins-{type}s-{plugin}-context>> |<<string,string>>|No
| <<plugins-{type}s-{plugin}-error_file>> |<<string,string>>|No
| <<plugins-{type}s-{plugin}-host>> |<<string,string>>|No
| <<plugins-{type}s-{plugin}-integration>> |<<string,string>>, one of `["udp", "tcp", "rmi", "rest"]`|No
| <<plugins-{type}s-{plugin}-metrics>> |<<hash,hash>>|No
| <<plugins-{type}s-{plugin}-port>> |<<number,number>>|No
| <<plugins-{type}s-{plugin}-retries>> |<<number,number>>|No
|=======================================================================

Also see <<plugins-{type}s-{plugin}-common-options>> for a list of options supported by all
output plugins.

&nbsp;

[id="plugins-{type}s-{plugin}-batch_number"]
===== `batch_number` 

  * Value type is <<number,number>>
  * Default value is `60`

the number of metrics to send to GraphTastic at one time. 60 seems to be the perfect
amount for UDP, with default packet size.

[id="plugins-{type}s-{plugin}-context"]
===== `context` 

  * Value type is <<string,string>>
  * Default value is `"graphtastic"`

if using rest as your end point you need to also provide the application url
it defaults to localhost/graphtastic.  You can customize the application url
by changing the name of the .war file.  There are other ways to change the
application context, but they vary depending on the Application Server in use.
Please consult your application server documentation for more on application
contexts.

[id="plugins-{type}s-{plugin}-error_file"]
===== `error_file` 

  * Value type is <<string,string>>
  * Default value is `""`

setting allows you to specify where we save errored transactions
this makes the most sense at this point - will need to decide
on how we reintegrate these error metrics
NOT IMPLEMENTED!

[id="plugins-{type}s-{plugin}-host"]
===== `host` 

  * Value type is <<string,string>>
  * Default value is `"127.0.0.1"`

host for the graphtastic server - defaults to 127.0.0.1

[id="plugins-{type}s-{plugin}-integration"]
===== `integration` 

  * Value can be any of: `udp`, `tcp`, `rmi`, `rest`
  * Default value is `"udp"`

options are udp(fastest - default) - rmi(faster) - rest(fast) - tcp(don't use TCP yet - some problems - errors out on linux)

[id="plugins-{type}s-{plugin}-metrics"]
===== `metrics` 

  * Value type is <<hash,hash>>
  * Default value is `{}`

metrics hash - you will provide a name for your metric and the metric
data as key value pairs.  so for example:

[source,ruby]
metrics => { "Response" => "%{response}" }

example for the logstash config

[source,ruby]
metrics => [ "Response", "%{response}" ]

NOTE: you can also use the dynamic fields for the key value as well as the actual value

[id="plugins-{type}s-{plugin}-port"]
===== `port` 

  * Value type is <<number,number>>
  * There is no default value for this setting.

port for the graphtastic instance - defaults to 1199 for RMI, 1299 for TCP, 1399 for UDP, and 8080 for REST

[id="plugins-{type}s-{plugin}-retries"]
===== `retries` 

  * Value type is <<number,number>>
  * Default value is `1`

number of attempted retry after send error - currently only way to integrate
errored transactions - should try and save to a file or later consumption
either by graphtastic utility or by this program after connectivity is
ensured to be established.



[id="plugins-{type}s-{plugin}-common-options"]
include::{include_path}/{type}.asciidoc[]